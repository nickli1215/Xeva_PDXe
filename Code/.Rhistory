setwd('G:/UHN/Xeva_PDXe/Code')
library(Biobase)
library(GGally)
library(immunedeconv)
library(tidyr)
library(tibble)
library(dplyr)
library(reshape2)
library(stringr)
library(ggpubr)
set_cibersort_binary("G:/UHN/CIBERSORT/CIBERSORT.R")
set_cibersort_mat("G:/UHN/CIBERSORT/LM22.txt")
PDX_exprs<-readRDS('../Data/PDXE_microArray.rds')
metadata<-pData(PDX_exprs)
breast_pdxs<-metadata[metadata$tumor.type=="breast",]$biobase.id
exprs_data<-exprs(PDX_exprs)[,breast_pdxs]
exprs_data.not_log<-exp(exprs_data)
breast_metadata<-metadata[breast_pdxs,]
seq(0,5)
expand.grid(seq(0,5),seq(0,5))
combn(5,20)
combn(5,2)
combn(7,2)
combn(6,2)
combn(6,2)[,1]
combn(6,2)[1,1]
library(Biobase)
library(GGally)
library(immunedeconv)
library(tidyr)
library(tibble)
library(dplyr)
library(reshape2)
library(stringr)
library(ggpubr)
set_cibersort_binary("G:/UHN/CIBERSORT/CIBERSORT.R")
set_cibersort_mat("G:/UHN/CIBERSORT/LM22.txt")
PDX_exprs<-readRDS('../Data/PDXE_microArray.rds')
metadata<-pData(PDX_exprs)
breast_pdxs<-metadata[metadata$tumor.type=="breast",]$biobase.id
exprs_data<-exprs(PDX_exprs)[,breast_pdxs]
exprs_data.not_log<-exp(exprs_data)
breast_metadata<-metadata[breast_pdxs,]
plot_results<-function(deconvolution_df,deconvolution_method){
for (cell in unique(deconvolution_df$cell.type)){
cell_data<-deconvolution_df[deconvolution_df$cell.type==cell,]
cell_data$passage<-as.factor(cell_data$passage)
cell_data$Proportion<-as.numeric(as.vector(cell_data$Proportion))
#ggplot(data=cell_data, aes(x=passage, y=Proportion, group=patient.id)) +
#geom_line() + geom_point()+
#ggplot(data=cell_data, aes(x=passage, y=Proportion,)) +
#geom_violin() +
#scale_color_brewer(palette="Paired")+
# theme_minimal() + ggtitle(paste0(deconvolution_method,": ",cell))
ggboxplot(cell_data, x = "passage", y = "Proportion",
ylab = "Cell Proportion", xlab = "Passage no.")
mainDir<-paste0("../Results/",deconvolution_method)
dir.create(mainDir, showWarnings = FALSE)
print(cell)
if(grepl( "/",cell, fixed = TRUE)){
cell<-str_replace_all(cell,"/","+")
}
ggsave(paste0(mainDir,"/",cell,"_boxplot.pdf"), width = 4, height = 4)
}
}
ggboxplot(cell_data, x = "passage", y = "Proportion",
ylab = "Cell Proportion", xlab = "Passage no.")
wilcox_test<-function(cell_data,combination){
i<-combination[1]
j<-combination[2]
passage1_proportions<-cell_data[(cell_data$passage==i)&(!is.na(cell_data$Proportion)),]$Proportion
passage2_proportions<-cell_data[(cell_data$passage==j)&(!is.na(cell_data$Proportion)),]$Proportion
res<-wilcox.test(passage1_proportions, passage2_proportions)
return(res)
}
wilcox_test_results<-function(deconvolution_df,deconvolution_method){
for (cell in unique(deconvolution_df$cell.type)){
cell_data<-deconvolution_df[deconvolution_df$cell.type==cell,]
cell_data$passage<-as.factor(cell_data$passage)
cell_data$Proportion<-as.numeric(as.vector(cell_data$Proportion))
combinations<-combn(6,2)
res<-lapply(combinations,function(x) wilcox_test(cell_data,x))
mainDir<-paste0("../Results/",deconvolution_method)
dir.create(mainDir, showWarnings = FALSE)
saveRDS(res,paste0(mainDir,"/",cell,"Wilcox_results.rds"))
}
}
expand.grid(seq(0,5),seq(0,5))
get_results<-function(dat_exprs,pdxs,metadata,method){
deconvolution<-deconvolute(dat_exprs,method)
if(method=="mcp_counter"){
#deconvolution[-1]<-deconvolution[-1]/colSums(deconvolution[-1])
}
breast_deconvolution<-rbind(t(metadata)[,pdxs],deconvolution[,-1][,pdxs])
rownames(breast_deconvolution)<-c(unlist(colnames(metadata)),deconvolution$cell_type)
breast_deconvolution.df<-as.data.frame(t(breast_deconvolution[-c(1,4),]))
#multiple.samples<-names(table(breast_deconvolution.df$patient.id)[table(breast_deconvolution.df$patient.id)>1])
#breast_deconvolution.df<-breast_deconvolution.df[breast_deconvolution.df$patient.id %in% multiple.samples,]
breast_deconvolution.df<-melt(breast_deconvolution.df,id.vars=c("patient.id","passage"),variable.name="cell.type",value.name="Proportion")
print("Plotting results")
plot_results(breast_deconvolution.df,method)
wilcox_test_results(breast_deconvolution.df,method)
#return(breast_deconvolution.df)
}
deconvolution<-deconvolute(exprs_data.not_log,"mcp_counter") #Proportion of total immune cells (not including tumour/endothelial tissue), sums to 1
deconvolution<-colSums(deconvolute(exprs_data.not_log,"mcp_counter")[-1]) #Raw count
colSums(deconvolute(exprs_data.not_log,"xcell")[-1]) #Proportion not including uncharacterized (sums to less than 1)
colSums(deconvolute(exprs_data.not_log,"quantiseq")[-1]) #Proportion including uncharacterized
colSums(deconvolute(exprs_data.not_log,"epic")[-1]) #Proportion including uncharacterized
deconvolution<-deconvolute(exprs_data.not_log,"cibersort_abs") #Proportion not including uncharacterized (sums to less than 1)
get_results(exprs_data.not_log,"mcp_counter")
get_results(exprs_data.not_log,"mcp_counter")
get_results(exprs_data.not_log,breast_pdxs,breast_metadata,"cibersort")
wilcox_test<-function(cell_data,combination){
i<-combination[1]
j<-combination[2]
passage1_proportions<-cell_data[(cell_data$passage==i)&(!is.na(cell_data$Proportion)),]$Proportion
passage2_proportions<-cell_data[(cell_data$passage==j)&(!is.na(cell_data$Proportion)),]$Proportion
print(passage1_proportions)
print(passage1_proportions)
res<-wilcox.test(passage1_proportions, passage2_proportions)
return(res)
}
get_results(exprs_data.not_log,breast_pdxs,breast_metadata,"cibersort")
wilcox_test<-function(cell_data,combination){
i<-combination[1]
j<-combination[2]
passage1_proportions<-cell_data[(cell_data$passage==i)&(!is.na(cell_data$Proportion)),]$Proportion
passage2_proportions<-cell_data[(cell_data$passage==j)&(!is.na(cell_data$Proportion)),]$Proportion
print(i)
print(j)
res<-wilcox.test(passage1_proportions, passage2_proportions)
return(res)
}
get_results(exprs_data.not_log,breast_pdxs,breast_metadata,"cibersort")
combinations[1]
combinations<-combn(6,2)
combinations[1]
combinations
combinations[[1]]
as.matrix(combinatsion)
as.matrix(combinations)
t(combinations)
wilcox_test_results<-function(deconvolution_df,deconvolution_method){
for (cell in unique(deconvolution_df$cell.type)){
cell_data<-deconvolution_df[deconvolution_df$cell.type==cell,]
cell_data$passage<-as.factor(cell_data$passage)
cell_data$Proportion<-as.numeric(as.vector(cell_data$Proportion))
combinations<-t(as.matrix(combn(6,2)))
res<-apply(combinations,function(x) wilcox_test(cell_data,x))
mainDir<-paste0("../Results/",deconvolution_method)
dir.create(mainDir, showWarnings = FALSE)
saveRDS(res,paste0(mainDir,"/",cell,"Wilcox_results.rds"))
}
}
get_results(exprs_data.not_log,breast_pdxs,breast_metadata,"cibersort")
get_results(exprs_data.not_log,breast_pdxs,breast_metadata,"cibersort")
