GDSC.deconvolution<-as.data.frame(GDSC.deconvolution)
rownames(GDSC.deconvolution)<-GDSC.deconvolution$cell_type
GDSC.deconvolution<-melt(GDSC.deconvolution,
id.vars="cell_type",
value.name="Score",
variable.name="Sample.ID")
GDSC.deconvolution$dataset<-"GDSC"
gCSI.deconvolution<-deconvolute(gCSI.exprs,deconvolution_method,indications=rep("brca",ncol(gCSI.exprs)))
gCSI.deconvolution<-as.data.frame(gCSI.deconvolution)
rownames(gCSI.deconvolution)<-gCSI.deconvolution$cell_type
gCSI.deconvolution<-melt(gCSI.deconvolution,
id.vars="cell_type",
value.name="Score",
variable.name="Sample.ID")
gCSI.deconvolution$dataset<-"gCSI"
GRAY.deconvolution<-deconvolute(GRAY.exprs,deconvolution_method,indications=rep("brca",ncol(GRAY.exprs)))
GRAY.deconvolution<-as.data.frame(GRAY.deconvolution)
rownames(GRAY.deconvolution)<-GRAY.deconvolution$cell_type
GRAY.deconvolution<-melt(GRAY.deconvolution,
id.vars="cell_type",
value.name="Score",
variable.name="Sample.ID")
GRAY.deconvolution$dataset<-"GRAY"
PDXe.deconvolution<-deconvolute(PDXe.exprs,deconvolution_method,indications=rep("brca",ncol(PDXe.exprs)))
PDXe.deconvolution<-as.data.frame(PDXe.deconvolution)
rownames(PDXe.deconvolution)<-PDXe.deconvolution$cell_type
PDXe.deconvolution<-melt(PDXe.deconvolution,
id.vars="cell_type",
value.name="Score",
variable.name="Sample.ID")
PDXe.deconvolution$dataset<-"PDXe"
#Morag.deconvolution<-deconvolute(Morag.exprs,deconvolution_method,indications=rep("brca",ncol(Morag.exprs)))
Morag.PDX.deconvolution<-deconvolute(Morag.PDX.exprs,deconvolution_method,indications=rep("brca",ncol(Morag.PDX.exprs)))
Morag.PDX.deconvolution<-as.data.frame(Morag.PDX.deconvolution)
rownames(Morag.PDX.deconvolution)<-Morag.PDX.deconvolution$cell_type
Morag.Tumor.deconvolution<-deconvolute(Morag.Tumor.exprs,deconvolution_method,indications=rep("brca",ncol(Morag.Tumor.exprs)))
Morag.Tumor.deconvolution<-as.data.frame(Morag.Tumor.deconvolution)
rownames(Morag.Tumor.deconvolution)<-Morag.Tumor.deconvolution$cell_type
#Morag.PDX.deconvolution<-Morag.deconvolution[,c("cell_type",rownames(Morag.metadata[Morag.metadata$Source=="PDX",]))]
#Morag.Tumor.deconvolution<-Morag.deconvolution[,c("cell_type",rownames(Morag.metadata[Morag.metadata$Source=="Patient",]))]
#Morag.deconvolution<-Morag.deconvolution[,-1]
Morag.PDX.deconvolution<-melt(Morag.PDX.deconvolution,
id.vars="cell_type",
value.name="Score",
variable.name="Sample.ID")
Morag.PDX.deconvolution$dataset<-"Morag.PDX"
Morag.Tumor.deconvolution<-melt(Morag.Tumor.deconvolution,
id.vars="cell_type",
value.name="Score",
variable.name="Sample.ID")
Morag.Tumor.deconvolution$dataset<-"Morag.Tumor"
#TCGA.deconvolution<-deconvolute(TCGA.exprs,deconvolution_method,indications=rep("brca",ncol(TCGA.exprs)))
#TCGA.deconvolution<-as.data.frame(TCGA.deconvolution)
#rownames(TCGA.deconvolution)<-TCGA.deconvolution$cell_type
#TCGA.deconvolution<-TCGA.deconvolution[,-1]
#TCGA.deconvolution<-melt(TCGA.deconvolution,
#      id.vars="cell_type",
#      value.name="Score",
#      variable.name="Sample.ID")
#TCGA.deconvolution$dataset<-"TCGA"
}else{
CCLE.deconvolution<-deconvolute(CCLE.exprs,deconvolution_method)
CCLE.deconvolution<-as.data.frame(CCLE.deconvolution)
rownames(CCLE.deconvolution)<-CCLE.deconvolution$cell_type
CCLE.deconvolution<-melt(CCLE.deconvolution,
id.vars="cell_type",
value.name="Score",
variable.name="Sample.ID")
CCLE.deconvolution$dataset<-"CCLE"
GDSC.deconvolution<-deconvolute(GDSC.exprs,deconvolution_method)
GDSC.deconvolution<-as.data.frame(GDSC.deconvolution)
rownames(GDSC.deconvolution)<-GDSC.deconvolution$cell_type
GDSC.deconvolution<-melt(GDSC.deconvolution,
id.vars="cell_type",
value.name="Score",
variable.name="Sample.ID")
GDSC.deconvolution$dataset<-"GDSC"
gCSI.deconvolution<-deconvolute(gCSI.exprs,deconvolution_method)
gCSI.deconvolution<-as.data.frame(gCSI.deconvolution)
rownames(gCSI.deconvolution)<-gCSI.deconvolution$cell_type
gCSI.deconvolution<-melt(gCSI.deconvolution,
id.vars="cell_type",
value.name="Score",
variable.name="Sample.ID")
gCSI.deconvolution$dataset<-"gCSI"
GRAY.deconvolution<-deconvolute(GRAY.exprs,deconvolution_method)
GRAY.deconvolution<-as.data.frame(GRAY.deconvolution)
rownames(GRAY.deconvolution)<-GRAY.deconvolution$cell_type
GRAY.deconvolution<-melt(GRAY.deconvolution,
id.vars="cell_type",
value.name="Score",
variable.name="Sample.ID")
GRAY.deconvolution$dataset<-"GRAY"
PDXe.deconvolution<-deconvolute(PDXe.exprs,deconvolution_method)
PDXe.deconvolution<-as.data.frame(PDXe.deconvolution)
rownames(PDXe.deconvolution)<-PDXe.deconvolution$cell_type
PDXe.deconvolution<-melt(PDXe.deconvolution,
id.vars="cell_type",
value.name="Score",
variable.name="Sample.ID")
PDXe.deconvolution$dataset<-"PDXe"
Morag.PDX.deconvolution<-deconvolute(Morag.PDX.exprs,deconvolution_method)
Morag.PDX.deconvolution<-as.data.frame(Morag.PDX.deconvolution)
rownames(Morag.PDX.deconvolution)<-Morag.PDX.deconvolution$cell_type
Morag.PDX.deconvolution<-melt(Morag.PDX.deconvolution,
id.vars="cell_type",
value.name="Score",
variable.name="Sample.ID")
Morag.PDX.deconvolution$dataset<-"Morag.PDX"
Morag.Tumor.deconvolution<-deconvolute(Morag.Tumor.exprs,deconvolution_method)
Morag.Tumor.deconvolution<-as.data.frame(Morag.Tumor.deconvolution)
rownames(Morag.Tumor.deconvolution)<-Morag.Tumor.deconvolution$cell_type
Morag.Tumor.deconvolution<-melt(Morag.Tumor.deconvolution,
id.vars="cell_type",
value.name="Score",
variable.name="Sample.ID")
Morag.Tumor.deconvolution$dataset<-"Morag.Tumor"
#Morag.PDX.deconvolution<-Morag.deconvolution[,c("cell_type",rownames(Morag.metadata[Morag.metadata$Source=="PDX",]))]
#Morag.Tumor.deconvolution<-Morag.deconvolution[,c("cell_type",rownames(Morag.metadata[Morag.metadata$Source=="Patient",]))]
#Morag.deconvolution<-Morag.deconvolution[,-1]
#TCGA.deconvolution<-deconvolute(TCGA.exprs,deconvolution_method)
#TCGA.deconvolution<-as.data.frame(TCGA.deconvolution)
#rownames(TCGA.deconvolution)<-TCGA.deconvolution$cell_type
#TCGA.deconvolution<-melt(TCGA.deconvolution,
#id.vars="cell_type",
#value.name="Score",
#variable.name="Sample.ID")
#TCGA.deconvolution$dataset<-"TCGA"
}
df_list <- list(#TCGA.deconvolution,
PDXe.deconvolution,
Morag.PDX.deconvolution,
Morag.Tumor.deconvolution,
GRAY.deconvolution,
CCLE.deconvolution,
GDSC.deconvolution,
gCSI.deconvolution)
all.deconvolution<-do.call("rbind", df_list)
#all.cells<-unique(c(gCSI.breast.cells,gdsc.breast.cells,CCLE.breast.cells,GRAY.breast.cells))
# all.cells<-all.cells[all.cells %in% colnames(gCSI.deconvolution) +
#all.cells %in% colnames(GDSC.deconvolution) +
# all.cells %in% colnames(CCLE.deconvolution) +
#all.cells %in% colnames(GRAY.deconvolution) >1]
#all_df<-matrix(ncol = 6, nrow = 0)
#x <- c("cellline","cell_type","CCLE","GDSC","gCSI","GRAY")
#colnames(all_df) <- x
#for (cellline in all.cells){
#if(cellline %in% colnames(CCLE.deconvolution)){
#CCLE_data<-CCLE.deconvolution[,cellline]
#}else{
# CCLE_data<-rep(NA,length(rownames(CCLE.deconvolution)))
# }
#if(cellline %in% colnames(GDSC.deconvolution)){
#GDSC_data<-GDSC.deconvolution[,cellline]
#}else{
#GDSC_data<-rep(NA,length(rownames(CCLE.deconvolution)))
# }
#if(cellline %in% colnames(gCSI.deconvolution)){
# gCSI_data<-gCSI.deconvolution[,cellline]
#}else{
#gCSI_data<-rep(NA,length(rownames(CCLE.deconvolution)))
#}
#if(cellline %in% colnames(GRAY.deconvolution)){
#GRAY_data<-GRAY.deconvolution[,cellline]
#}else{
#GRAY_data<-rep(NA,length(rownames(CCLE.deconvolution)))
#}
#cell_types<-CCLE.deconvolution$cell_type
#all_data<-cbind(rep(cellline,length(rownames(CCLE.deconvolution))),cell_types,CCLE_data,GDSC_data,gCSI_data,GRAY_data)
#colnames(all_data)<-x
#all_df<-rbind(all_df,all_data)
#}
print("Plotting Results")
all_cell_plots<-list()
for (cell in unique(all.deconvolution$cell_type)){
cell.data<-all.deconvolution[all.deconvolution$cell_type==cell,]
p0<-ggboxplot(cell.data, x = "dataset", y = "Score",
color="dataset",
palette = "jco")+
font("title",size=12)+ggtitle(cell)+
stat_compare_means(label = "p.signif",
aes(group=dataset),
ref.group = "Morag.Tumor",
method="wilcox.test")+
theme_bw()
all_cell_plots[[cell]]<-p0
}
ml<-ggarrange(plotlist=all_cell_plots,nrow=3,ncol=2,common.legend=TRUE)
results_dir<-"../Results/CellLines"
mainDir<-paste0(results_dir,"/",deconvolution_method)
dir.create(mainDir, showWarnings = FALSE)
pdf(paste0(mainDir,"/",deconvolution_method,"_Full_boxplot_separated_noTCGA.pdf"),height=9,width=6)
print(ml)
dev.off()
#for (cell in unique(all_df$cell_type)){
#cell_data<-all_df[all_df$cell_type==cell,]
#cell_data_long<-melt(cell_data,id=c("cellline","cell_type"),value.name = "Proportion")
#colnames(cell_data_long)[3]<-"Dataset"
#cell_data_long<-cell_data_long[!is.na(cell_data_long$Proportion),]
#ylim1 = boxplot.stats(cell_data_long$Proportion)$stats[c(1, 5)]
#my_comparisons<-list (c("CCLE","GDSC"), c("GDSC", "gCSI"),  c("gCSI", "GRAY"),
#c("CCLE","gCSI"),c("GDSC","GRAY"),
#c("CCLE","GRAY"))
#my_comparisons
#groups<-do.call(rbind, my_comparisons)
#pvalues<-lapply(my_comparisons,function(x){return(get_pvalue(x,cell_data_long))})
#pvalues<-round(unlist(pvalues),5)
#.y.<-rep("Proportion",length(pvalues))
#y.position<-c(rep(ylim1[2]+0.05,3),ylim1[2]+0.1,ylim1[2]+0.15,ylim1[2]+0.2)
#y.position<-as.numeric(y.position)
# stats<-data.frame(.y.=.y.,group1=as.vector(groups[,1]),
#group2=as.vector(groups[,2]),
# p=unlist(pvalues),
#y.position=as.vector(y.position))
#stats<-as_tibble(stats)
#p0<-ggboxplot(cell_data_long, x = "Dataset", y = "Proportion",
#color="Dataset",id="cellline",
#palette = "jco")+
#font("title",size=12)+ggtitle(cell)+
#stat_compare_means(aes(group=Dataset),method="wilcox.test",comparisons=my_comparisons,paired=TRUE)+
#stat_pvalue_manual(data=stats,label="p")+
#theme_bw()
#ylim1 = boxplot.stats(cell_data_long$Proportion)$stats[c(1, 5)]
#p0 = p0 + coord_cartesian(ylim = ylim1*1.05)
#all_cell_plots[[cell]]<-p0
#}
#all_celllines_plots<-list()
#for (cell in unique(all_df$cell_type)){
#cell_data<-all_df[all_df$cell_type==cell,]
#plotting_data<-as.matrix(cell_data[,c("CCLE","GDSC","gCSI","GRAY")])
#rownames(plotting_data)<-cell_data$cellline
#p<-Heatmap(plotting_data,cluster_rows=FALSE,
#column_order=c("CCLE","gCSI","GDSC","GRAY"),
#na_col = "black",
#show_column_dend = FALSE,
#column_title = cell)
#if(grepl( "/",cell, fixed = TRUE)){
#cell<-str_replace_all(cell,"/","+")
#}
#dir.create(paste0(mainDir,"/heatmaps"),showWarnings = FALSE)
#pdf(paste0(mainDir,"/","heatmaps/",cell,"_heatmap.pdf"),height=10,width=5)
#print(p)
#dev.off()
#}
#for (cellline in all.cells){
#cellline_data<-all_df[all_df$cellline==cellline,]
#cellline_data<-melt(cellline_data)
#colnames(cellline_data)<-c("Cell-line","cell.type","Dataset","Proportion")
#cellline_data<-cellline_data[!is.na(cellline_data$Proportion),]
#cellline_data$Proportion<-as.numeric(cellline_data$Proportion)
# p<-ggplot(cellline_data,aes(fill=cell.type,x=Dataset,y=Proportion))+
#geom_bar(position="fill", stat="identity")+
# geom_col(width=1)
#mainDir<-paste0(results_dir,"/",deconvolution_method)
#dir.create(mainDir, showWarnings = FALSE)
#dir.create(paste0(mainDir,"/barplots"),showWarnings = FALSE)
#pdf(paste0(mainDir,"/","barplots/",cellline,"_barplot.pdf"),height=10,width=5)
#print(p)
#dev.off()
#}
}
rm(list=ls())
gc()
CCLE<-readRDS(paste0(pset_folder,"/CCLE.rds"))
library(Biobase)
library(GGally)
library(immunedeconv)
library(tidyr)
library(tibble)
library(dplyr)
library(reshape2)
library(stringr)
library(ggpubr)
library(gridExtra)
library(PharmacoGx)
library(grDevices)
library(ComplexHeatmap)
fpkmToTpm <- function(fpkm)
{
return(exp(log(fpkm) - log(sum(fpkm)) + log(1e6)))
}
fpkmToTpm_matrix <- function(fpkm_matrix) {
fpkm_matrix_new <- apply(fpkm_matrix, 2, fpkmToTpm)
return(fpkm_matrix_new)
}
set_cibersort_binary("G:/UHN/CIBERSORT/CIBERSORT.R")
set_cibersort_mat("G:/UHN/CIBERSORT/LM22.txt")
pset_folder<-"G:/UHN/psets"
CCLE<-readRDS(paste0(pset_folder,"/CCLE.rds"))
CCLE.breast.cells<-rownames(CCLE@cell[CCLE@cell$tissueid=="Breast",])
CCLE<-subsetTo(CCLE,cells=CCLE.breast.cells)
CCLE@molecularProfiles$Kallisto_0.46.1.rnaseq.counts
CCLE@molecularProfiles$rna
CCLE@molecularProfiles$Kallisto_0.46.1.rnaseq.counts
CCLE.experiment<-summarizeMolecularProfiles(CCLE,mDataType="Kallisto_0.46.1.rnaseq.counts")
CCLE.exprs<-assay(CCLE.experiment)
range(CCLE.exprs)
range(CCLE.exprs,na.rm=TRUE)
CCLE.experiment<-summarizeMolecularProfiles(CCLE,mDataType="rna")
CCLE.exprs<-assay(CCLE.experiment)
CCLE.exprs
range(rna)
range9CCLE.exprs)
range(CCLE.exprs)
range(2**CCLE.exprs)
range(exp(CCLE.exprs))
gc()
CCLE@molecularProfiles
rm(list=ls())
source('LoadData.R')
rm(list=ls())
source('global_params.R')
PDX_morag<-readRDS('../Data/pdxMorag_rnaseq.rda')
Morag.exprs<-exprs(PDX_morag)
Morag.metadata<-pData(PDX_morag)
Morag.gene.metadata<-fData(PDX_morag)
rownames(Morag.gene.metadata)<-Morag.gene.metadata$gene_id
Morag.gene.metadata<-Morag.gene.metadata[rownames(Morag.exprs),]
rownames(Morag.exprs)<-Morag.gene.metadata$gene_name
Morag.metadata<-Morag.metadata[!is.na(Morag.metadata$Source),]
Morag.metadata<-Morag.metadata[intersect(rownames(Morag.metadata),colnames(Morag.exprs)),]
Morag.exprs<-Morag.exprs[,rownames(Morag.metadata)]
Morag.exprs<-2**Morag.exprs - 0.001
Morag.exprs<-fpkmToTpm_matrix(Morag.exprs)
PDX_morag<-readRDS('../Data/pdxMorag_rnaseq.rda')
Morag.exprs<-exprs(PDX_morag)
Morag.metadata<-pData(PDX_morag)
Morag.gene.metadata<-fData(PDX_morag)
rownames(Morag.gene.metadata)<-Morag.gene.metadata$gene_id
Morag.gene.metadata<-Morag.gene.metadata[rownames(Morag.exprs),]
rownames(Morag.exprs)<-Morag.gene.metadata$gene_name
Morag.metadata<-Morag.metadata[!is.na(Morag.metadata$Source),]
Morag.metadata<-Morag.metadata[intersect(rownames(Morag.metadata),colnames(Morag.exprs)),]
Morag.exprs<-Morag.exprs[,rownames(Morag.metadata)]
Morag.exprs<-2**Morag.exprs - 0.001
Morag.exprs<-fpkmToTpm_matrix(Morag.exprs)
gene_vars<-rowVars(Morag.exprs)
all_genes<-rownames(Morag.exprs)
variance_data<-data.frame(cbind(all_genes,gene_vars,c(1:length(all_genes))))
variance_data<-variance_data %>% group_by(all_genes)%>% slice_max(n = 1, gene_vars, with_ties = FALSE)
indices<-variance_data$V3
Morag.exprs<-Morag.exprs[as.numeric(indices),]
Morag.exprs<-log2(Morag.exprs+1)
means<-rowMeans(t(Morag.exprs))
stdvs<-sqrt(rowVars(t(Morag.exprs)))
Morag.exprs<-t((t(Morag.exprs)-means)/stdvs)
Morag.noimmune.exprs<-Morag.exprs[!rownames(Morag.exprs) %in% immune_related_genes$gene_symbol,]
morag.umap <- umap(t(Morag.noimmune.exprs))
Morag.umap.df<-data.frame(UMAP1=morag.umap$layout[,1],
#                          UMAP2=morag.umap$layout[,2])
Morag.umap.df<-cbind(Morag.umap.df,Morag.metadata)
colnames(Morag.umap.df)[17]<-"Disease.Pathology"
Morag.metadata[Morag.metadata$Source=="Patient",]$Source<-"tumor"
ggplot(Morag.umap.df,aes(x=UMAP1,y=UMAP2,shape=Source,color=Source))+
geom_point()
PDX_morag<-readRDS('../Data/pdxMorag_rnaseq.rda')
Morag.exprs<-exprs(PDX_morag)
Morag.metadata<-pData(PDX_morag)
Morag.gene.metadata<-fData(PDX_morag)
rownames(Morag.gene.metadata)<-Morag.gene.metadata$gene_id
Morag.gene.metadata<-Morag.gene.metadata[rownames(Morag.exprs),]
rownames(Morag.exprs)<-Morag.gene.metadata$gene_name
Morag.metadata<-Morag.metadata[!is.na(Morag.metadata$Source),]
Morag.metadata<-Morag.metadata[intersect(rownames(Morag.metadata),colnames(Morag.exprs)),]
Morag.exprs<-Morag.exprs[,rownames(Morag.metadata)]
Morag.exprs<-2**Morag.exprs - 0.001
Morag.exprs<-fpkmToTpm_matrix(Morag.exprs)
gene_vars<-rowVars(Morag.exprs)
all_genes<-rownames(Morag.exprs)
variance_data<-data.frame(cbind(all_genes,gene_vars,c(1:length(all_genes))))
variance_data<-variance_data %>% group_by(all_genes)%>% slice_max(n = 1, gene_vars, with_ties = FALSE)
indices<-variance_data$V3
Morag.exprs<-Morag.exprs[as.numeric(indices),]
Morag.exprs<-log2(Morag.exprs+1)
means<-rowMeans(t(Morag.exprs))
stdvs<-sqrt(rowVars(t(Morag.exprs)))
Morag.exprs<-t((t(Morag.exprs)-means)/stdvs)
Morag.exprs
Morag.EMT.exprs<-Morag.exprs[EMT_genes,]
dim(MOrag.exprs)
dim(Morag.exprs)
EMT_genes
rownames(Morag.exprs)
EMT_genes %in% rownames(Morag.exprs)
EMT_genes[!EMT_genes%in% rownames(Morag.exprs)]
grepl(rownames(Morag.exprs), "orf", ignore.case = TRUE, perl = FALSE,
fixed = FALSE, useBytes = FALSE)
grepl( "orf", rownames(Morag.exprs),ignore.case = TRUE, perl = FALSE,
fixed = FALSE, useBytes = FALSE)
rownames(Morag.exprs)[grepl( "orf", rownames(Morag.exprs),ignore.case = TRUE, perl = FALSE,
fixed = FALSE, useBytes = FALSE)]
rownames(Morag.exprs)[grepl( "orf", rownames(Morag.exprs),ignore.case = TRUE, perl = FALSE,
fixed = FALSE, useBytes = FALSE)]
rownames(Morag.exprs)[grepl( "ord", rownames(Morag.exprs),ignore.case = TRUE, perl = FALSE,
fixed = FALSE, useBytes = FALSE)]
EMT_genes[!EMT_genes%in% rownames(Morag.exprs)]
rownames(Morag.exprs)[grepl( "RBM", rownames(Morag.exprs),ignore.case = TRUE, perl = FALSE,
fixed = FALSE, useBytes = FALSE)]
rownames(Morag.exprs)[grepl( "MTAC", rownames(Morag.exprs),ignore.case = TRUE, perl = FALSE,
fixed = FALSE, useBytes = FALSE)]
EMT_genes[!EMT_genes%in% rownames(Morag.exprs)]
EMT_genes<-gsub("C1ORD172","C1ORF172",EMT_genes)
EMT_genes<-gsub("ORF","orf",EMT_genes)
EMT_genes
EMT_genes[!EMT_genes%in% rownames(Morag.exprs)]
rownames(Morag.exprs)[grepl( "TACC", rownames(Morag.exprs),ignore.case = TRUE, perl = FALSE,
fixed = FALSE, useBytes = FALSE)]
rownames(Morag.exprs)[grepl( "TAC", rownames(Morag.exprs),ignore.case = TRUE, perl = FALSE,
fixed = FALSE, useBytes = FALSE)]
rownames(Morag.exprs)[grepl( "EPCAM ", rownames(Morag.exprs),ignore.case = TRUE, perl = FALSE,
fixed = FALSE, useBytes = FALSE)]
rownames(Morag.exprs)[grepl( "EPCAM", rownames(Morag.exprs),ignore.case = TRUE, perl = FALSE,
fixed = FALSE, useBytes = FALSE)]
EMT_genes
EMT_genes[!EMT_genes%in% rownames(Morag.exprs)]
EMT_genes<-gsub("C1ORD172","C1ORF172",EMT_genes)
EMT_genes<-gsub("ORF","orf",EMT_genes)
EMT_genes<-gsub("TACSTD1","EPCAM",EMT_genes)
EMT_genes<-gsub("GPR110","ADGRF1",EMT_genes)
EMT_genes<-gsub("MTAC2D1","TC2N",EMT_genes)
EMT_genes<-gsub("LRRC54","TSKU",EMT_genes)
rownames(Morag.exprs)[grepl( "orf", rownames(Morag.exprs),ignore.case = TRUE, perl = FALSE,
fixed = FALSE, useBytes = FALSE)]
Morag.EMT.exprs<-Morag.exprs[EMT_genes,]
EMT_genes<-gsub("C1ORD172","C1ORF172",EMT_genes)
EMT_genes<-gsub("ORF","orf",EMT_genes)
EMT_genes<-gsub("TACSTD1","EPCAM",EMT_genes)
EMT_genes<-gsub("GPR110","ADGRF1",EMT_genes)
EMT_genes<-gsub("MTAC2D1","TC2N",EMT_genes)
EMT_genes<-gsub("LRRC54","TSKU",EMT_genes)
EMT_subset_genes<-EMT_genes[EMT_genes%in%rownames(Morag.exprs)]
Morag.EMT.exprs<-Morag.exprs[EMT_genes,]
Morag.EMT.exprs<-Morag.exprs[EMT_subset_genes,]
morag.umap <- umap(t(Morag.EMT.exprs))
Morag.umap.df<-data.frame(UMAP1=morag.umap$layout[,1],
UMAP2=morag.umap$layout[,2])
Morag.umap.df<-cbind(Morag.umap.df,Morag.metadata)
colnames(Morag.umap.df)[17]<-"Disease.Pathology"
Morag.metadata[Morag.metadata$Source=="Patient",]$Source<-"tumor"
ggplot(Morag.umap.df,aes(x=UMAP1,y=UMAP2,shape=Source,color=Source))+
geom_point()
library(here)
library(magrittr)
library(tidyverse)
library(PharmacoGx)
library(reticulate)
library(msigdbr)
library(umap)
library(Rtsne)
library(tidyr)
library(tibble)
library(dplyr)
morag.umap <- umap(t(Morag.EMT.exprs))
Morag.umap.df<-data.frame(UMAP1=morag.umap$layout[,1],
UMAP2=morag.umap$layout[,2])
Morag.umap.df<-cbind(Morag.umap.df,Morag.metadata)
colnames(Morag.umap.df)[17]<-"Disease.Pathology"
Morag.metadata[Morag.metadata$Source=="Patient",]$Source<-"tumor"
ggplot(Morag.umap.df,aes(x=UMAP1,y=UMAP2,shape=Source,color=Source))+
geom_point()
Morag.noimmune.exprs<-Morag.exprs[!rownames(Morag.exprs) %in% immune_related_genes$gene_symbol,]
morag.umap <- umap(t(Morag.noimmune.exprs))
Morag.umap.df<-data.frame(UMAP1=morag.umap$layout[,1],
UMAP2=morag.umap$layout[,2])
Morag.umap.df<-cbind(Morag.umap.df,Morag.metadata)
colnames(Morag.umap.df)[17]<-"Disease.Pathology"
Morag.metadata[Morag.metadata$Source=="Patient",]$Source<-"tumor"
ggplot(Morag.umap.df,aes(x=UMAP1,y=UMAP2,shape=Source,color=Source))+
geom_point()
PDX_morag<-readRDS('../Data/pdxMorag_rnaseq.rda')
Morag.exprs<-exprs(PDX_morag)
Morag.metadata<-pData(PDX_morag)
Morag.gene.metadata<-fData(PDX_morag)
rownames(Morag.gene.metadata)<-Morag.gene.metadata$gene_id
Morag.gene.metadata<-Morag.gene.metadata[rownames(Morag.exprs),]
rownames(Morag.exprs)<-Morag.gene.metadata$gene_name
Morag.metadata<-Morag.metadata[!is.na(Morag.metadata$Source),]
Morag.metadata<-Morag.metadata[intersect(rownames(Morag.metadata),colnames(Morag.exprs)),]
Morag.exprs<-Morag.exprs[,rownames(Morag.metadata)]
Morag.exprs<-2**Morag.exprs - 0.001
Morag.exprs<-fpkmToTpm_matrix(Morag.exprs)
gene_vars<-rowVars(Morag.exprs)
all_genes<-rownames(Morag.exprs)
variance_data<-data.frame(cbind(all_genes,gene_vars,c(1:length(all_genes))))
variance_data<-variance_data %>% group_by(all_genes)%>% slice_max(n = 1, gene_vars, with_ties = FALSE)
indices<-variance_data$V3
Morag.exprs<-Morag.exprs[as.numeric(indices),]
Morag.exprs<-log2(Morag.exprs+1)
means<-rowMeans(t(Morag.exprs))
stdvs<-sqrt(rowVars(t(Morag.exprs)))
Morag.scaled.exprs<-t((t(Morag.exprs)-means)/stdvs)
heatmap(Morag.EMT.exprs)
heatmap(Morag.noimmune.exprs)
Morag.noimmune.exprs<-Morag.exprs[!rownames(Morag.exprs) %in% immune_related_genes$gene_symbol,]
all_gene_sets<-msigdbr(species="human",category="C5")
immune_related_genes<-all_gene_sets[grepl("immune",all_gene_sets$gs_name,ignore.case=T),]
+
Morag.exprs
dim(Morag.exprs)
Morag.scaled.exprs
dim(Morag.EMT.exprs)
Heatmap(Morag.noimmune.exprs)
Heatmap(Morag.EMT.exprs)
all_gene_sets<-msigdbr(species="human",category="C5")
immune_related_genes<-all_gene_sets[grepl("immune",all_gene_sets$gs_name,ignore.case=T),]
all_gene_sets<-msigdbr(species="human",category="C5")
immune_related_genes<-all_gene_sets[grepl("immune",all_gene_sets$gs_name,ignore.case=T),]
all_gene_sets<-msigdbr(species="human",category="C5")
immune_related_genes<-all_gene_sets[grepl("immune",all_gene_sets$gs_name,ignore.case=T),]
Morag.noimmune.exprs<-Morag.exprs[!rownames(Morag.exprs) %in% immune_related_genes$gene_symbol,]
Heatmap(Morag.noimmune.exprs)
Heatmap(Morag.noimmune.exprs,cluster_rows = FALSE)
